@model DashAPIOut


<div>
    <h1 class="helloWorld">Personal Finance App - Wallet</h1>
</div>
<br />
<br />

<div class="row" style="margin: 0 auto;">
    <div class="col-md-3">
        <div class="card shadow p-3 border-dark mb-3" style="margin: 0 auto;">
            <div class="card-header"><h5>EasyUpdate</h5></div>
            <div class="card-body">
                <h4 class="card-title">Aggiornamento rapido</h4><br />
                <a href="#" class="btn btn-info" onclick="Edit()">Easy Update</a>
                <p class="card-text" align="justify"><br />Questo strumento permette di aggiornare rapidamente il wallet con gli importi attuali.<br />Inserisci il saldo aggiornato di ciascun conto, la somma dei contanti e il numero di ticket disponibili.</p>
            </div>
        </div>
    </div>
    <div class="col-md-9">
        <div class="row" style="margin: 0 auto;">
            <div class="col-md-4">
                <div class="card shadow p-3 border-primary mb-3" style="margin: 0 auto;">
                    <div class="card-header">
                        SALDO ATTUALE
                        &nbsp;&nbsp;<span class="material-icons md-24 orange600" style="display: inline-flex; vertical-align: text-bottom; font-size: 18px" data-toggle="tooltip" title="L'importo è la somma dei saldi di conti e fonti di guadagno (es. Conti, tickets, contanti, ...).">info</span>
                    </div>
                    <div class="card-body">
                        <div class="row">
                            <div class="col-5">
                                <h5 class="card-title" style="vertical-align: bottom">Saldo attuale:</h5>
                            </div>
                            <div class="col-7 card-numbers">
                                <h3 style="font-weight: bold; text-align: right">@Model.TransactionSum.ToString("C", System.Globalization.CultureInfo.GetCultureInfo("es-es"))</h3>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="col-md-4">
                <div class="card shadow p-3 border-success mb-3" style="margin: 0 auto;">
                    <div class="card-header">
                        TOTALE CREDITI&nbsp;&nbsp;<span class="material-icons md-24 orange600" style="display: inline-flex; vertical-align: text-bottom; font-size: 18px" data-toggle="tooltip" title="L'importo rappresenta il totale dei crediti da ricevere.">info</span>
                    </div>
                    <div class="card-body">
                        <div class="row">
                            <div class="col-6">
                                <h4 class="card-title" style="vertical-align: bottom">Totale crediti: </h4>
                            </div>
                            <div class="col-6">
                                <h3 style="text-align: right">@Model.CreditSum.ToString("C", System.Globalization.CultureInfo.GetCultureInfo("es-es"))</h3>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="col-md-4">
                <div class="card shadow p-3 border-danger mb-3" style="margin: 0 auto;">
                    <div class="card-header">
                        TOTALE DEBITI&nbsp;&nbsp;<span class="material-icons md-24 orange600" style="display: inline-flex; vertical-align: text-bottom; font-size: 18px" data-toggle="tooltip" title="L'importo rappresenta il totale dei debiti ancora da estinguere.">info</span>
                    </div>
                    <div class="card-body">
                        <div class="row">
                            <div class="col-6">
                                <h4 class="card-title" style="vertical-align: bottom">Totale debiti: </h4>
                            </div>
                            <div class="col-6">
                                <h3 style="text-align: right">@Model.DebitSum.ToString("C", System.Globalization.CultureInfo.GetCultureInfo("es-es"))</h3>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="row" style="margin: 0 auto;">
            <div class="col-md-6">
                <div class="card shadow p-3 border-warning mb-3" style="margin: 0 auto;">
                    <div class="card-header">
                        TOTALE + CREDITI - DEBITI&nbsp;&nbsp;<span class="material-icons md-24 orange600" style="display: inline-flex; vertical-align: text-bottom; font-size: 18px" data-toggle="tooltip" title="Il totale calcolato è la somma del saldo e dei crediti, al netto dei debiti.">info</span>
                    </div>
                    <div class="card-body">
                        <div class="row">
                            <div class="col-6">
                                <h3 class="card-title" style="vertical-align: bottom">Totale calcolato: </h3>
                            </div>
                            <div class="col-6">
                                <h2 style="font-weight: bold; text-align: right">@Model.TotWithDebits.ToString("C", System.Globalization.CultureInfo.GetCultureInfo("es-es"))</h2>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="col-md-6">
                <div class="card shadow p-3 border-info mb-3" style="margin: 0 auto;">
                    <div class="card-header">
                        TOTALE + CREDITI&nbsp;&nbsp;<span class="material-icons md-24 orange600" style="display: inline-flex; vertical-align: text-bottom; font-size: 18px" data-toggle="tooltip" title="Il totale calcolato è la somma del saldo e dei crediti.">info</span>
                    </div>
                    <div class="card-body">
                        <div class="row">
                            <div class="col-6">
                                <h3 class="card-title" style="vertical-align: bottom">Saldo totale: </h3>
                            </div>
                            <div class="col-6">
                                <h2 style="text-align: right">@Model.TotNoDebits.ToString("C", System.Globalization.CultureInfo.GetCultureInfo("es-es"))</h2>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>


<div class="row" style="margin: 0 auto;">
    <div class="col-md-5">
        <div class="card shadow p-3 border-light mb-3" style="margin: 0 auto;">
            <div class="card-header">NUOVA TRANSAZIONE&nbsp;&nbsp;<span class="material-icons md-24 orange600" style="display: inline-flex; vertical-align: text-bottom; font-size: 15px" data-toggle="tooltip" title="Tutto ciò che impatta direttamente sul saldo attuale ed è rappresentabile con una transazione (Entrata/Uscita).">info</span></div>
            <div class="card-body">

                <partial name="Transaction_Add" model="Model.Transaction" />
            </div>
        </div>
    </div>
    <div class="col-md-7">
        @using (Html.BeginForm("Index", "PersonalFinance", FormMethod.Get))
        {


            <div class="card shadow p-3 border-dark mb-3" style="margin: 0 auto; height: 33rem;">
                <div class="card-header">
                    <div class="row">
                        <div class="col-sm-6">
                            SALDO
                        </div>
                        <div class="col-sm-1" style="text-align:right;">
                            <label>MESE:</label>
                        </div>
                        <div class="col-sm-2">
                            @Html.DropDownList("selectedMonth", (List<SelectListItem>)Model.ItemListMonth, "Tutti", new { onchange = "form.submit();", @class = "dropdown-item-inline" })
                        </div>
                        <div class="col-sm-1" style="text-align:right;">
                            <label>ANNO:</label>
                        </div>
                        <div class="col-sm-2">
                            @Html.DropDownList("selectedYear", (List<SelectListItem>)Model.ItemListYear, "Tutti", new { onchange = "form.submit();", @class = "dropdown-item-inline" })
                        </div>
                    </div>
                </div>
                <div class="card-body">
                    <p>Nel grafico è rappresentato l'andamento del saldo nel tempo.<br />E' possibile selezionare il range temporale di interesse col filtro in alto.</p>
                    <br />
                    <canvas id="canvas" style="margin: 0 auto; height: 90px;"></canvas>
                </div>
            </div>

        }


    </div>

</div>


@using (Html.BeginForm("Index", "PersonalFinance", FormMethod.Get))
{
    <div class="row" style="margin: 0 auto;">
        <div class="col-md-12">
            <div class="card shadow p-3 border-dark mb-3" style="margin: 0 auto;">
                <div class="card-header">
                    <div class="row">
                        <div class="col-sm-8">
                            <label>FILTRI > Seleziona il periodo di riferimento</label>
                        </div>
                        <div class="col-sm-1" style="text-align:right;">
                            <label>MESE:</label>
                        </div>
                        <div class="col-sm-1">
                            @Html.DropDownList("selectedMonthTr", (List<SelectListItem>)Model.ItemListMonthTr, "Tutti", new { onchange = "form.submit();", @class = "dropdown-item-inline" })
                        </div>
                        <div class="col-sm-1" style="text-align:right;">
                            <label>ANNO:</label>
                        </div>
                        <div class="col-sm-1">
                            @Html.DropDownList("selectedYearTr", (List<SelectListItem>)Model.ItemListYearTr, "Tutti", new { onchange = "form.submit();", @class = "dropdown-item-inline" })
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div class="row" style="margin: 0 auto;">
        <div class="col-md-2">
            <div class="card shadow p-3 border-dark mb-3" style="margin: 0 auto; height: 500px;">
                <div class="card-header">FLUSSO DI CASSA</div>
                <div class="card-body">
                    <canvas id="myChart" height="610"></canvas>
                </div>
            </div>
        </div>
        <div class="col-md-5">
            <div class="card shadow p-3 border-dark mb-3" style="margin: 0 auto; height: 500px;">
                <div class="card-header">GRAFICO ENTRATE > Suddivisione categorie</div>
                <div class="card-body">
                    <div class="row">
                        <h4 style="text-align: left; padding-bottom: 23px;">
                            Totale entrate:&nbsp;&nbsp;&nbsp;&nbsp;@ViewBag.TotCountIn.ToString("C", System.Globalization.CultureInfo.GetCultureInfo("es-es"))
                        </h4>
                    </div>
                    <div class="row">
                        <div class="col-10">
                            <canvas id="doughnut-chart-in" width="800" height="530" style="margin: 0 auto; display: block;"></canvas>
                        </div>
                        <div class="col-2" style="margin-top: 3px;">
                            @foreach (var item in ViewBag.CodeValuesInV)
                            {
                                <small style="text-align:left;">@item.ToString("C", System.Globalization.CultureInfo.GetCultureInfo("es-es"))</small><br />
                            }
                        </div>


                    </div>
                </div>
            </div>
        </div>
        <div class="col-md-5">
            <div class="card shadow p-3 border-dark mb-3" style="margin: 0 auto; height: 500px;">
                <div class="card-header">GRAFICO USCITE > Suddivisione categorie</div>
                <div class="card-body">
                    <div class="row">
                        <h4 style="text-align:left; padding-bottom: 23px;">
                            Totale uscite:&nbsp;&nbsp;&nbsp;&nbsp;@ViewBag.TotCountOut.ToString("C", System.Globalization.CultureInfo.GetCultureInfo("es-es"))
                        </h4>
                    </div>
                    <div class="row">
                        <div class="col-10">
                            <canvas id="doughnut-chart-out" width="800" height="530" style="margin: 0 auto; display: block;"></canvas>
                        </div>
                        <div class="col-2" style="margin-top: 3px;">
                            @foreach (var item in ViewBag.CodeValuesOutV)
                            {
                                <small style="text-align:left;">@item.ToString("C", System.Globalization.CultureInfo.GetCultureInfo("es-es"))</small><br />
                            }
                        </div>

                    </div>
                </div>
            </div>
        </div>
    </div>
}
<script src="https://cdnjs.cloudflare.com/ajax/libs/Chart.js/2.5.0/Chart.min.js"></script>
<script>
        new Chart(document.getElementById("doughnut-chart-in"), {
            type: 'doughnut',
            data: {
                labels: @Html.Raw(ViewBag.CodesIn),
                datasets: [
                    {
                        label: "Spesa €",
                        backgroundColor: ["rgba(255, 87, 51, 0.7)", "rgba(158, 19, 236, 0.7)", "rgba(255, 230, 51, 0.7)", "rgba(236, 19, 105, 0.7)", "rgba(54, 162, 235, 0.7)", "rgba(255, 87, 51, 0.7)", "rgba(78, 209, 224, 0.7)", "rgba(10, 141, 43, 0.7)"],
                        data: @Html.Raw(ViewBag.CodeValuesIn),
                        borderColor: [
                            'rgba(255, 87, 51, 1)',
                            'rgba(158, 19, 236, 1)',
                            'rgba(255, 230, 51, 1)',
                            'rgba(236, 19, 105, 1)',
                            'rgba(54, 162, 235, 1)',
                            'rgba(255, 87, 51, 1)',
                            'rgba(78, 209, 224, 1)',
                            'rgba(10, 141, 43, 1)'
                        ],
                    }
                ]
            },
            options: {
                title: {
                    display: false,
                    text: 'Suddivisione entrate'
                },
                legend: {
                    position: 'right',
                    labels: {
                        usePointStyle: true,
                        fontColor: "#506678",
                        fontSize: 14,
                        padding: 10,
                    }
                },
            }
        });
</script>
<script>
        new Chart(document.getElementById("doughnut-chart-out"), {
            type: 'doughnut',
            data: {
                labels: @Html.Raw(ViewBag.CodesOut),
                datasets: [
                    {
                        label: "Spesa €",
                        backgroundColor: ["rgba(255, 87, 51, 0.7)", "rgba(158, 19, 236, 0.7)", "rgba(255, 230, 51, 0.7)", "rgba(236, 19, 105, 0.7)", "rgba(54, 162, 235, 0.7)", "rgba(255, 87, 51, 0.7)", "rgba(78, 209, 224, 0.7)", "rgba(10, 141, 43, 0.7)"],
                        data: @Html.Raw(ViewBag.CodeValuesOut),
                        borderColor: [
                            'rgba(255, 87, 51, 1)',
                            'rgba(158, 19, 236, 1)',
                            'rgba(255, 230, 51, 1)',
                            'rgba(236, 19, 105, 1)',
                            'rgba(54, 162, 235, 1)',
                            'rgba(255, 87, 51, 1)',
                            'rgba(78, 209, 224, 1)',
                            'rgba(10, 141, 43, 1)'
                        ]
                    }
                ]
            },
            options: {
                title: {
                    display: false,
                    text: 'Suddivisione uscite'
                },
                legend: {
                    position: 'right',
                    labels: {
                        usePointStyle: true,
                        fontColor: "#506678",
                        fontSize: 14,
                        padding: 10,
                    }
                }
            }
        });
</script>










<div class="modal fade" id="fastupdate" tabindex="-1" role="dialog" aria-labelledby="newitemLabel" aria-hidden="true">
    <div class="modal-dialog" role="document" style="width:1250px;">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="exampleModalLabel">Easy Update</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true"></span>
                </button>
            </div>
            <div class="modal-body" id="ModalBodyDiv">
            </div>
        </div>
    </div>
</div>



@section scripts {
    <script>
        function Edit() {
            var url = "/PersonalFinance/Fast_Update/";
            $("#ModalBodyDiv").load(url, function () {
                $("#fastupdate").modal("show");
            })
        }

    </script>
}



<script>
    const colors = {
        purple: {
            default: "rgba(37, 150, 190, 1)",
            half: "rgba(37, 150, 190, 0.5)",
            quarter: "rgba(37, 150, 190, 0.25)",
            zero: "rgba(37, 150, 190, 0)"
        },
        indigo: {
            default: "rgba(80, 102, 120, 1)",
            quarter: "rgba(80, 102, 120, 0.25)"
        }
    };
    var i = 0;

    var items = @Html.Raw(Model.Balances);
    var values = new Array(items.length);
    var strDate = new Array(items.length);
    for (i = 0; i < items.length; i++) {
        strDate[i] = items[i].BalDateTime;
        values[i] = items[i].ActBalance;
    }


    const ctx = document.getElementById("canvas").getContext("2d");
    ctx.canvas.height = 100;

    gradient = ctx.createLinearGradient(0, 25, 0, 300);
    gradient.addColorStop(0, colors.purple.half);
    gradient.addColorStop(0.35, colors.purple.quarter);
    gradient.addColorStop(1, colors.purple.zero);

    const options = {
        type: "line",
        data: {
            labels: strDate,
            datasets: [
                {
                    fill: true,
                    backgroundColor: gradient,
                    pointBackgroundColor: colors.purple.default,
                    borderColor: colors.purple.default,
                    data: values,
                    lineTension: 0.2,
                    borderWidth: 2,
                    pointRadius: 3
                }
            ]
        },
        options: {
            layout: {
                padding: 10
            },
            responsive: true,
            legend: {
                display: false
            },
            scales: {
                xAxes: [
                    {
                        type: 'time',
                        time: {
                            unit: 'day'
                        },
                        //distribution: 'series',
                        display: true,
                        title: {
                            display: true,
                            text: 'Date'
                        },
                        gridLines: {
                            display: false
                        },
                        ticks: {
                            padding: 10,
                            autoSkip: false,
                            maxRotation: 15,
                            minRotation: 15
                        }
                    }
                ],
                yAxes: [
                    {
                        scaleLabel: {
                            display: true,
                            labelString: "Saldo in €",
                            padding: 10
                        },
                        gridLines: {
                            display: true,
                            color: colors.indigo.quarter
                        },
                        ticks: {
                            beginAtZero: false,
                            padding: 10
                        }
                    }
                ]
            }
        }
    };

    window.onload = function () {
        window.myLine = new Chart(ctx, options);
        Chart.defaults.global.defaultFontColor = colors.indigo.default;
        //Chart.defaults.global.defaultFontFamily = "Fira Sans";
    };

</script>

<script>
        var i = 0;
        var items = @Html.Raw(Model.Transactions);
        var out = 0;
        var enter = 0;
        for (i = 0; i < items.length; i++) {
            if (items[i].TrsValue < 0) out += items[i].TrsValue;
            else enter += items[i].TrsValue;
        }
        var flux = enter + out;
        var ctxb = document.getElementById("myChart");
        var myChart = new Chart(ctxb, {
            type: 'bar',
            data: {
                labels: ["Entrate", "Uscite", "Flusso"],
                datasets: [{
                    label: "Totale €",
                    data: [enter, out, flux],
                    backgroundColor: [
                        'rgba(54, 162, 235, 0.2)',
                        'rgba(255, 99, 132, 0.2)',
                        'rgba(75, 192, 192, 0.2)',
                    ],
                    borderColor: [
                        'rgba(54, 162, 235, 1)',
                        'rgba(255,99,132,1)',
                        'rgba(75, 192, 192, 1)',
                    ],
                    borderWidth: 1
                }]
            },
            options: {
                responsive: true,
                legend: {
                    display: false
                },
                plugins: {
                    labels: {
                        fontColor: "#506678"
                    }
                },
                scales: {
                    xAxes: [{
                        ticks: {
                            maxRotation: 90,
                            minRotation: 80
                        },
                        color: 'red',
                        gridLines: {
                            offsetGridLines: true
                        }
                    }],
                    yAxes: [{
                        ticks: {
                            beginAtZero: true
                        }
                    }],
                    x: {
                        
                    }
                }
            }
        });
</script>
<script>
    $(document).ready(function () {
        $('[data-toggle="tooltip"]').tooltip({ 'placement': 'right' });
    });
</script>
@model ViewModel


<div>
    <h1 class="helloWorld">Personal Finance App - Dashboard</h1>
</div>
<br />
<br />
<br />

<div class="row" style="margin: 0 auto;">
    <div class="col-md-4">
        <div class="card shadow p-3 border-dark mb-3" style="margin: 0 auto;">
            <div class="card-header">TOTALE TRANSAZIONI</div>
            <div class="card-body">
                <h4 class="card-title">Saldo attuale: @Model.TransactionSum €</h4>
                <p class="card-text">Nella tabella a lato vengono riportate le entrate/uscite fisse mensili.<br /></p>
            </div>
        </div>
    </div>
    <div class="col-md-4">
        <div class="card shadow p-3 border-dark mb-3" style="margin: 0 auto;">
            <div class="card-header">TOTALE CREDITI</div>
            <div class="card-body">
                <h4 class="card-title">Totale crediti: @Model.CreditSum €</h4>
                <p class="card-text">Nella tabella a lato vengono riportate le entrate/uscite fisse mensili.<br /></p>
            </div>
        </div>
    </div>
    <div class="col-md-4">
        <div class="card shadow p-3 border-dark mb-3" style="margin: 0 auto;">
            <div class="card-header">TOTALE DEBITI</div>
            <div class="card-body">
                <h4 class="card-title">Totale debiti: @Model.DebitSum €</h4>
                <p class="card-text">Nella tabella a lato vengono riportate le entrate/uscite fisse mensili.<br /></p>
            </div>
        </div>
    </div>
</div>
<div class="row" style="margin: 0 auto;">
    <div class="col-md-6">
        <div class="card shadow p-3 border-dark mb-3" style="margin: 0 auto;">
            <div class="card-header">TOTALE + CREDITI - DEBITI</div>
            <div class="card-body">
                <h4 class="card-title">Saldo totale: @Model.TotWithDebits €</h4>
                <p class="card-text">Nella tabella a lato vengono riportate le entrate/uscite fisse mensili.<br /></p>
            </div>
        </div>
    </div>
    <div class="col-md-6">
        <div class="card shadow p-3 border-dark mb-3" style="margin: 0 auto;">
            <div class="card-header">TOTALE + CREDITI</div>
            <div class="card-body">
                <h4 class="card-title">Saldo totale: @Model.TotNoDebits €</h4>
                <p class="card-text">Nella tabella a lato vengono riportate le entrate/uscite fisse mensili.<br /></p>
            </div>
        </div>
    </div>
</div>




@using (Html.BeginForm("Index", "PersonalFinance", FormMethod.Get))
{
    <div class="row" style="margin: 0 auto;">
        <div class="col-md-7">
            <div class="card shadow p-3 border-dark mb-3" style="margin: 0 auto;">
                <div class="card-header">
                    GRAFICO
                    <div class="col-sm-4">

                        @Html.DropDownList("Test", (List<SelectListItem>)ViewBag.ItemList)


                    </div>
                </div>
                <div class="card-body">
                    <canvas id="canvas"></canvas>
                </div>
            </div>
        </div>
        <div class="col-md-3">
            <div class="card shadow p-3 border-dark mb-3" style="margin: 0 auto;">
                <div class="card-header">GRAFICO</div>
                <div class="card-body">
                    <canvas id="myChart" height="300"></canvas>
                </div>
            </div>
        </div>
    </div>
}





    <!--

        <script src="~/js/drawBasic.js"></script>
       // <script>drawBasic('') </script>
        <div id="chart_div"></div>
    -->
    <div class="wrapper">


    </div>



    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>



    <script src="https://cdnjs.cloudflare.com/ajax/libs/moment.js/2.27.0/moment.min.js" integrity="sha512-rmZcZsyhe0/MAjquhTgiUcb4d9knaFc7b5xAfju483gbEXTkeJRUMIPk6s3ySZMYUHEcjKbjLjyddGWMrNEvZg==" crossorigin="anonymous"></script>
    <script src='https://cdn.jsdelivr.net/npm/chart.js@2.9.3/dist/Chart.min.js'></script>
    <script>


    const colors = {
        purple: {
            default: "rgba(37, 150, 190, 1)",
            half: "rgba(37, 150, 190, 0.5)",
            quarter: "rgba(37, 150, 190, 0.25)",
            zero: "rgba(37, 150, 190, 0)"
        },
        indigo: {
            default: "rgba(80, 102, 120, 1)",
            quarter: "rgba(80, 102, 120, 0.25)"
        }
    };
    var i = 0;

    var items = @Html.Raw(ViewBag.Balances);
    var values = new Array(items.length);
    var strDate = new Array(items.length);
    for (i = 0; i < items.length; i++) {
        strDate[i] = items[i].BalDateTime;
        values[i] = items[i].ActBalance;
     //   strDate[i] = strDate[i].substring(0, strDate[i].indexOf('T'))
    }
   /* const weight = [60.0, 60.2, 59.1, 61.4, 59.9, 60.2, 59.8, 58.6, 59.6, 59.2];

 */  const labels = [
        "Week 1",
        "Week 2",
        "Week 3",
        "Week 4",
        "Week 5",
        "Week 6",
        "Week 7",
        "Week 8",
        "Week 9",
        "Week 10"
    ];

    const ctx = document.getElementById("canvas").getContext("2d");
    ctx.canvas.height = 100;

    gradient = ctx.createLinearGradient(0, 25, 0, 300);
    gradient.addColorStop(0, colors.purple.half);
    gradient.addColorStop(0.35, colors.purple.quarter);
    gradient.addColorStop(1, colors.purple.zero);

    const options = {
        type: "line",
        data: {
            labels: strDate,
            datasets: [
                {
                    fill: true,
                    backgroundColor: gradient,
                    pointBackgroundColor: colors.purple.default,
                    borderColor: colors.purple.default,
                    data: values,
                    lineTension: 0.2,
                    borderWidth: 2,
                    pointRadius: 3
                }
            ]
        },
        options: {
            layout: {
                padding: 10
            },
            responsive: true,
            legend: {
                display: false
            },
            scales: {
                xAxes: [
                    {
                        type: 'time',
                        time: {
                            unit: 'day'
                        },
                        //distribution: 'series',
                        display: true,
                        title: {
                            display: true,
                            text: 'Date'
                        },
                        gridLines: {
                            display: false
                        },
                        ticks: {
                            padding: 10,
                            autoSkip: false,
                            maxRotation: 15,
                            minRotation: 15
                        }
                    }
                ],
                yAxes: [
                    {
                        scaleLabel: {
                            display: true,
                            labelString: "Saldo in €",
                            padding: 10
                        },
                        gridLines: {
                            display: true,
                            color: colors.indigo.quarter
                        },
                        ticks: {
                            beginAtZero: false,
                            padding: 10
                        }
                    }
                ]
            }
        }
    };

    window.onload = function () {
        window.myLine = new Chart(ctx, options);
        Chart.defaults.global.defaultFontColor = colors.indigo.default;
        //Chart.defaults.global.defaultFontFamily = "Fira Sans";
    };

    </script>

    <script>
        var ctxb = document.getElementById("myChart");
        var myChart = new Chart(ctxb, {
            type: 'bar',
            data: {
                labels: ["Entrate", "Uscite", "Flusso"],
                datasets: [{
                    label: '# of Tomatoes',
                    data: [12, 19, -3],
                    backgroundColor: [
                        'rgba(255, 99, 132, 0.2)',
                        'rgba(54, 162, 235, 0.2)',
                        'rgba(75, 192, 192, 0.2)',

                    ],
                    borderColor: [
                        'rgba(255,99,132,1)',
                        'rgba(54, 162, 235, 1)',
                        'rgba(75, 192, 192, 1)',
                    ],
                    borderWidth: 1
                }]
            },
            options: {
                responsive: false,
                scales: {
                    xAxes: [{
                        ticks: {
                            maxRotation: 90,
                            minRotation: 80
                        },
                        gridLines: {
                            offsetGridLines: true // à rajouter
                        }
                    }],
                    yAxes: [{
                        ticks: {
                            beginAtZero: true
                        }
                    }]
                }
            }
        });
    </script>
